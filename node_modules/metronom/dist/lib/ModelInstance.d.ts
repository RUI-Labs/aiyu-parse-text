import Model from './Model';
import { ModelFields, DataInfo } from './Interfaces';
/**
 * ModelInstance Class
 * @class ModelInstance
 * @category ModelInstance
 */
declare class ModelInstance {
    [index: string]: any;
    _Model: ModelFields;
    /**
     * Represents an object produced from Metronom ORM Model
     * @constructor
     * @param {Object} data - Lead data
     * @param {Model} model - Parent model to generate object
     * @param {DataInfo} dataInfo - The place where redis information about the record is kept.
     * @returns {ModelInstance} new record of ModelInstance
     */
    constructor(data: Object, model: Model, dataInfo: DataInfo);
    /**
     * Saves the current state of the object to Redis.
     */
    save(): Promise<void>;
    /**
     * Clears all metronome-related data within the object and restores it to its raw state.
     * @returns {Object} raw data
     */
    getPureData(): Object;
    /**
     * Converts the object to JSON
     * @returns {string} stringified object
     */
    toJSON(): string;
    /**
     * Destroy the object from Redis.
     * @returns {boolean} Returns true or false that it has been deleted.
     */
    destroy(): Promise<boolean>;
}
export default ModelInstance;
